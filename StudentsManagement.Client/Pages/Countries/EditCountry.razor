@page "/country/edit/{id:int}"
@using StudentsManagement.Shared.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Update Country Details</h3>
            </div>
            <div class="card-body">
                <EditForm Model="countryobj" OnValidSubmit="UpdateCountry" FormName="updateCountry">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Country Code</label>
                                    <InputText for="Code" class="form-control" @bind-Value="@countryobj.Code" />
                                    <ValidationMessage For="()=>countryobj.Code" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Country Name</label>
                                    <InputText for="Name" class="form-control" @bind-Value="@countryobj.Name" />
                                    <ValidationMessage For="()=>countryobj.Name" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Update Country</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    public Country countryobj { get; set; } = new();


    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await LoadCountry();
    }
    public async Task LoadCountry()
    {
        countryobj = await CountryService.GetByIdAsync(id);
    }


    protected async Task UpdateCountry()
    {
        var result = CountryService.UpdateAsync(countryobj);
        navigation.NavigateTo("/countries-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/countries-list");
    }
}
